#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'

networks:
  fabric_net:
    external: true

services:
  ca.org1.example.com:
    image: hyperledger/fabric-ca:x86_64-1.1.0
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-org1
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/0e729224e8b3f31784c8a93c5b8ef6f4c1c91d9e6e577c45c33163609fe40011_sk
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/0e729224e8b3f31784c8a93c5b8ef6f4c1c91d9e6e577c45c33163609fe40011_sk
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ./channel/crypto-config/peerOrganizations/org1.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca_peerOrg1
    networks:
      - fabric_net

  ca.org2.example.com:
    image: hyperledger/fabric-ca:x86_64-1.1.0
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-org2
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/a7d47efa46a6ba07730c850fed2c1375df27360d7227f48cdc2f80e505678005_sk
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/a7d47efa46a6ba07730c850fed2c1375df27360d7227f48cdc2f80e505678005_sk
    ports:
      - "8054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ./channel/crypto-config/peerOrganizations/org2.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca_peerOrg2
    networks:
      - fabric_net


  orderer0.example.com:
    container_name: orderer0.example.com
    image: hyperledger/fabric-orderer:x86_64-1.1.0
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/crypto/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/crypto/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/crypto/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/crypto/orderer/tls/ca.crt, /etc/hyperledger/crypto/peerOrg1/tls/ca.crt, /etc/hyperledger/crypto/peerOrg2/tls/ca.crt]
      - ORDERER_KAFKA_VERSION=0.9.0.1
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderers
    command: orderer
    ports:
      - 7050:7050
    volumes:
        - ./channel:/etc/hyperledger/configtx
        - ./channel/crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/:/etc/hyperledger/crypto/orderer
        - ./channel/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/etc/hyperledger/crypto/peerOrg1
        - ./channel/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/:/etc/hyperledger/crypto/peerOrg2
        - ../../../hyperledger_backup/orderer0/orderer/:/var/hyperledger/production/orderer
    networks:
      - fabric_net


  orderer1.example.com:
    container_name: orderer1.example.com
    image: hyperledger/fabric-orderer:x86_64-1.1.0
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/crypto/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/crypto/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/crypto/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/crypto/orderer/tls/ca.crt, /etc/hyperledger/crypto/peerOrg1/tls/ca.crt, /etc/hyperledger/crypto/peerOrg2/tls/ca.crt]
      - ORDERER_KAFKA_VERSION=0.9.0.1
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderers
    command: orderer
    ports:
      - 7049:7050
    volumes:
        - ./channel:/etc/hyperledger/configtx
        - ./channel/crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/:/etc/hyperledger/crypto/orderer
        - ./channel/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/etc/hyperledger/crypto/peerOrg1
        - ./channel/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/:/etc/hyperledger/crypto/peerOrg2
        - ../../../hyperledger_backup/orderer1/orderer/:/var/hyperledger/production/orderer
    networks:
      - fabric_net


  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    extends:
      file:   base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer0.org1.example.com
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
#      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0:5984
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
        - ./channel/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/etc/hyperledger/crypto/peer
        - ../../../hyperledger_backup/peer0_org1/production/:/var/hyperledger/production/

  peer1.org1.example.com:
    container_name: peer1.org1.example.com
    extends:
      file:   base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer1.org1.example.com
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_ADDRESS=peer1.org1.example.com:7051
#      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
    ports:
      - 7056:7051
      - 7058:7053
    volumes:
        - ./channel/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/:/etc/hyperledger/crypto/peer
        - ../../../hyperledger_backup/peer1_org1/production/:/var/hyperledger/production/

#  peer2.org1.example.com:
#    container_name: peer2.org1.example.com
#    extends:
#      file:   base.yaml
#      service: peer-base
#    environment:
#      - CORE_PEER_ID=peer2.org1.example.com
#      - CORE_PEER_LOCALMSPID=Org1MSP
#      - CORE_PEER_ADDRESS=peer2.org1.example.com:7051
#    ports:
#      - 7061:7051
#      - 7063:7053
#    volumes:
#        - ./channel/crypto-config/peerOrganizations/org1.example.com/peers/peer2.org1.example.com/:/etc/hyperledger/crypto/peer
#        - ../../../hyperledger_backup/peer2_org1/production/:/var/hyperledger/production/

  peer0.org2.example.com:
    container_name: peer0.org2.example.com
    extends:
      file:   base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer0.org2.example.com
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_ADDRESS=peer0.org2.example.com:7051
#      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb2:5984
    ports:
      - 8051:7051
      - 8053:7053
    volumes:
        - ./channel/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/:/etc/hyperledger/crypto/peer
        - ../../../hyperledger_backup/peer0_org2/production/:/var/hyperledger/production/

  peer1.org2.example.com:
    container_name: peer1.org2.example.com
    extends:
      file:   base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer1.org2.example.com
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_ADDRESS=peer1.org2.example.com:7051
#      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb3:5984
    ports:
      - 8056:7051
      - 8058:7053
    volumes:
        - ./channel/crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/:/etc/hyperledger/crypto/peer
        - ../../../hyperledger_backup/peer1_org2/production/:/var/hyperledger/production/

#  peer2.org2.example.com:
#    container_name: peer2.org2.example.com
#    extends:
#      file:   base.yaml
#      service: peer-base
#    environment:
#      - CORE_PEER_ID=peer2.org2.example.com
#      - CORE_PEER_LOCALMSPID=Org2MSP
#      - CORE_PEER_ADDRESS=peer2.org2.example.com:7051
#    ports:
#      - 8061:7051
#      - 8063:7053
#    volumes:
#        - ./channel/crypto-config/peerOrganizations/org2.example.com/peers/peer2.org2.example.com/:/etc/hyperledger/crypto/peer
#        - ../../../hyperledger_backup/peer2_org2/production/:/var/hyperledger/production/

#  couchdb0:
#     container_name: couchdb0
#     image: hyperledger/fabric-couchdb
#     # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
#     # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
#     #environment:
#     #  - COUCHDB_USER=
#     #  - COUCHDB_PASSWORD=
#     # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
#     # for example map it to utilize Fauxton User Interface in dev environments.
#     ports:
#       - "5984:5984"
#     #networks:
#     #  - byfn
#     networks:
#       - fabric_net


  # couchdb1:
  #   container_name: couchdb1
  #   image: hyperledger/fabric-couchdb
  #   # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
  #   # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
  #   #environment:
  #   #  - COUCHDB_USER=
  #   #  - COUCHDB_PASSWORD=
  #   # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
  #   # for example map it to utilize Fauxton User Interface in dev environments.
  #   ports:
  #     - "6984:5984"
  #   #networks:
  #   #  - byfn
  #   networks:
  #     - fabric_net

  
  # couchdb2:
  #   container_name: couchdb2
  #   image: hyperledger/fabric-couchdb
  #   # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
  #   # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
  #   #environment:
  #   #  - COUCHDB_USER=
  #   #  - COUCHDB_PASSWORD=
  #   # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
  #   # for example map it to utilize Fauxton User Interface in dev environments.
  #   ports:
  #     - "7984:5984"
  #   #networks:
  #   #  - byfn
  #   networks:
  #     - fabric_net


  # couchdb3:
  #   container_name: couchdb3
  #   image: hyperledger/fabric-couchdb
  #   # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
  #   # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
  #   #environment:
  #   #  - COUCHDB_USER=
  #   #  - COUCHDB_PASSWORD=
  #   # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
  #   # for example map it to utilize Fauxton User Interface in dev environments.
  #   ports:
  #     - "8984:5984"
  #   #networks:
  #   #  - byfn
  #   networks:
  #     - fabric_net
